--1．创建一windows用户（名字自定），用sql语句建立windows验证模式的登录名。默认数据库为student
CREATE LOGIN [DESKTOP-8QRH2EV\liu] FROM WINDOWS--注意：DESKTOP-8QRH2EV是计算机名，liu是Windows用户名
WITH DEFAULT_DATABASE = Student;
--2．用sql语句和系统存储过程建立登录名sqluser,密码为1234
CREATE LOGIN sqluser WITH PASSWORD = '1234'
exec sp_addlogin sqluser, '1234'
--3．为student数据库新建用户u1，其登录名为sqluser。
USE student
GO
CREATE USER u1 FOR LOGIN sqluser
--4．新建登录usersf，并将其加入到sysadmin固定服务器角色中。
exec sp_addlogin usersf, '1234'
exec sp_addsrvrolemember 'usersf','sysadmin'--由于sysadmin是系统管理员角色，拥有所有权限,,所以下一题登录名改为sqluser
--5．将student用户u1（登录名为sqluser）加入到db_owner角色中，使其全权负责该数据库,并验证其权限。
USE student
GO 
exec sp_addrolemember 'db_owner',u1
 -- 验证:以sqluser登录,在新建查询界面输入以下内容验证
    USE student
    GO
    SELECT * FROM SC-- 成功，db_owner拥有查询权限
    UPDATE SC
    SET Grade = 75
    WHERE Sno = '200515001' AND cno = '4' -- 成功，db_owner拥有修改表项的权限
	insert into course values('12','大数据','1',3)--成功，db_owner拥有插入的权限
    ALTER TABLE SC
        ADD temp tinyint -- 成功，db_owner拥有更改表结构的权限

--6．为SPJ数据库新建用户u2，u3，其登录名分别为u2，u3。

CREATE LOGIN u2 WITH PASSWORD = '1234', DEFAULT_DATABASE = SPJ
CREATE LOGIN u3 WITH PASSWORD = '1234', DEFAULT_DATABASE = SPJ
USE SPJ
GO
CREATE USER u2 FOR LOGIN u2
CREATE USER u3 FOR LOGIN u3

--（1）授予用户u2对S表有SELECT 权，对P表颜色（COLOR）具有更新权限；
    GRANT SELECT ON S TO u2 WITH GRANT OPTION;
    GRANT UPDATE(COLOR) ON P TO u2
    WITH GRANT OPTION;
--（2）u2将其拥有的权限授予u3；
    -- 本小题在u2登录下执行.验证u2获得权限，并给u3授权
USE SPJ
GO
 SELECT * FROM S; -- 成功
 SELECT * FROM P; -- 拒绝
 UPDATE P SET COLOR='红'--成功
 update P set color='绿' where pno='p1'--拒绝，因为u2没有对P的查询权限
 GRANT SELECT ON S TO u3;
 GRANT UPDATE(COLOR) ON P TO u3
--（3）用sql语句逐一验证u3所获得的权限。
    -- 以u3身份登录:
 SELECT * FROM S; -- 成功
 SELECT * FROM P; -- 拒绝
 UPDATE P SET COLOR='红'--成功
 update P set color='绿' where pno='p1'--拒绝，因为u2没有对P的查询权限
  --（4）撤销用户u3所获得的权限，并验证。
    -- 以u2身份登录并操作:
    REVOKE SELECT ON S FROM u3;
    REVOKE UPDATE(COLOR) ON P FROM u3;
    -- 以u3身份登录并操作:
    SELECT * FROM S -- 拒绝
    UPDATE P SET COLOR='红' --拒绝
--7.在student数据库中建立角色operate,该角色具有对student和course表的查询权限；具有对表sc的插入和修改权限。
USE student
GO
CREATE ROLE operate
GRANT SELECT ON student TO operate
GRANT SELECT ON course TO operate
GRANT update,INSERT ON SC TO operate
--8.拒绝用户u1对sc表的修改权限。
DENY update ON SC TO u1
--9.使用存储过程将角色operate赋给用户u1,并用sql语句验证其权限。（特别验证u1对sc表的修改权限）
exec sp_addrolemember operate,u1
-- 验证:这里用登录名sqluser登录
USE student
GO
SELECT * FROM Student-- 成功
SELECT * FROM course-- 成功
insert into sc values ('200515003','3',88,NULL)--成功
update sc set temp=0
--消息 229，级别 14，状态 5，第 6 行
拒绝了对对象 'sc' (数据库 'student'，架构 'dbo')的 UPDATE 权限。
这是因为用户u1通过operate角色获得的对SC的update权限，由于被DENY了，因此该语句的执行被拒绝了.
--10. 在student数据库中创建架构（schema）teacher指定给用户teacher（也就是要先创建一个teacher用户）
use student
go
CREATE LOGIN tt WITH PASSWORD = '1234'
create user teacher for login tt
create schema teacher AUTHORIZATION teacher
--11.	在已创建的teacher架构中创建“tea”表，表结构为（tno(编号), tname(姓名), tsd（专业）,tphone, te_mail）(数据类型和长度自己定义)，通过teacher架构为teacher1用户设置查询权限，验证teacher1用户对表tea是否具有select权限和delete权限，为什么？
create table teacher.tea
(tno char(10),
 tname varchar(20),
 tsd varchar(10),
 tphone char(11),
 te_mail varchar(30)
 )
 insert into teacher.tea values('1234567890','王伟','计算机','13963112345','123.com')
 --验证过程
 /*在“对象资源管理器”中展开数据库“student”→“安全性”→“架构”，选择新创建的架构teacher，
 右键单击鼠标，在弹出的快捷菜单中选择“属性”菜单项，打开“架构属性”窗口，
 在该架构属性的“权限”选项页中，单击“搜索”按钮，选择用户u1（假设已经创建），为用户授予“选择”权限。单击“确定”*/
 --以sqluser登录
 select * from teacher.tea--成功
delete from teacher.tea--拒绝了对对象 'tea' (数据库 'student'，架构 'teacher')的 DELETE 权限